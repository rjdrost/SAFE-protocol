/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { L1Contract, L1ContractInterface } from "../L1Contract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "ticket",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "escrowPreimage",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "claimTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket[]",
        name: "tickets",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[]",
        name: "escrowPreimages",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature[]",
        name: "signatures",
        type: "tuple[]",
      },
    ],
    name: "claimTickets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610869806100206000396000f3fe6080604052600436106100345760003560e01c80631f02228814610039578063760bd2871461005b578063d0e30db01461007b575b600080fd5b34801561004557600080fd5b50610059610054366004610556565b610083565b005b34801561006757600080fd5b50610059610076366004610636565b6104b9565b610059610530565b428360a0013511156100d45760405162461bcd60e51b8152602060048201526015602482015274151a19481d1a58dad95d081a5cc8195e1c1a5c9959605a1b60448201526064015b60405180910390fd5b6000836040516020016100e79190610716565b60405160208183030381529060405280519060200120905060008160405160200161013e91907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b604051602081830303815290604052805190602001209050600060018285604001602081019061016e9190610776565b604080516000815260208181018084529490945260ff909216908201528635606082015290860135608082015260a0016020604051602081039080840390855afa1580156101c0573d6000803e3d6000fd5b505060408051601f198101516020820189905293506000925001604051602081830303815290604052805190602001209050866080013581146102635760405162461bcd60e51b815260206004820152603560248201527f54686520707265696d616765206d757374206d617463682074686520657363726044820152741bddc81a185cda081bdb881d1a19481d1a58dad95d605a1b60648201526084016100cb565b60008061027660808a0160608b016107a0565b6001600160a01b0316815260208101919091526040016000205461029b9060016107d3565b8760200135146103035760405162461bcd60e51b815260206004820152602d60248201527f5469636b6574206e6f6e6365206d75737420626520746865206e65787420617660448201526c61696c61626c65206e6f6e636560981b60648201526084016100cb565b61031360808801606089016107a0565b6001600160a01b0316826001600160a01b0316146103735760405162461bcd60e51b815260206004820152601e60248201527f5469636b6574206973206e6f74207369676e65642062792073656e646572000060448201526064016100cb565b86356001600061038960808b0160608c016107a0565b6001600160a01b03166001600160a01b031681526020019081526020016000205410156104025760405162461bcd60e51b815260206004820152602160248201527f53656e64657220646f6573206e6f74206861766520656e6f7567682066756e646044820152607360f81b60648201526084016100cb565b60008061041560808a0160608b016107a0565b6001600160a01b031681526020810191909152604001600090812080549161043c836107eb565b90915550610452905060608801604089016107a0565b6040516001600160a01b039190911690883580156108fc02916000818181858888f1935050505015801561048a573d6000803e3d6000fd5b503360009081526001602052604081208054893592906104ab908490610806565b909155505050505050505050565b60005b85811015610527576105158787838181106104d9576104d961081d565b905060c002018686848181106104f1576104f161081d565b9050602002013585858581811061050a5761050a61081d565b905060600201610083565b8061051f816107eb565b9150506104bc565b50505050505050565b336000908152600160205260408120805434929061054f9084906107d3565b9091555050565b600080600083850361014081121561056d57600080fd5b60c081121561057b57600080fd5b84935060c08401359250606060df198201121561059757600080fd5b5060e0840190509250925092565b60008083601f8401126105b757600080fd5b50813567ffffffffffffffff8111156105cf57600080fd5b6020830191508360208260051b85010111156105ea57600080fd5b9250929050565b60008083601f84011261060357600080fd5b50813567ffffffffffffffff81111561061b57600080fd5b6020830191508360206060830285010111156105ea57600080fd5b6000806000806000806060878903121561064f57600080fd5b863567ffffffffffffffff8082111561066757600080fd5b818901915089601f83011261067b57600080fd5b81358181111561068a57600080fd5b8a602060c08302850101111561069f57600080fd5b6020928301985096509088013590808211156106ba57600080fd5b6106c68a838b016105a5565b909650945060408901359150808211156106df57600080fd5b506106ec89828a016105f1565b979a9699509497509295939492505050565b6001600160a01b038116811461071357600080fd5b50565b813581526020808301359082015260c081016040830135610736816106fe565b6001600160a01b039081166040840152606084013590610755826106fe565b1660608301526080838101359083015260a092830135929091019190915290565b60006020828403121561078857600080fd5b813560ff8116811461079957600080fd5b9392505050565b6000602082840312156107b257600080fd5b8135610799816106fe565b634e487b7160e01b600052601160045260246000fd5b600082198211156107e6576107e66107bd565b500190565b60006000198214156107ff576107ff6107bd565b5060010190565b600082821015610818576108186107bd565b500390565b634e487b7160e01b600052603260045260246000fdfea264697066735822122008b5983354ebdcebb1658e138fb61ad5d02eace03084e27328bee588e824990a64736f6c634300080a0033";

type L1ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1Contract__factory extends ContractFactory {
  constructor(...args: L1ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L1Contract> {
    return super.deploy(overrides || {}) as Promise<L1Contract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): L1Contract {
    return super.attach(address) as L1Contract;
  }
  connect(signer: Signer): L1Contract__factory {
    return super.connect(signer) as L1Contract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1ContractInterface {
    return new utils.Interface(_abi) as L1ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1Contract {
    return new Contract(address, _abi, signerOrProvider) as L1Contract;
  }
}
