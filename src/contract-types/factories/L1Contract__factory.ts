/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { L1Contract, L1ContractInterface } from "../L1Contract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "ticket",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "escrowPreimage",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "claimTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket[]",
        name: "tickets",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[]",
        name: "escrowPreimages",
        type: "bytes32[]",
      },
    ],
    name: "claimTickets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b12806100206000396000f3fe6080604052600436106100345760003560e01c80631f02228814610039578063d0e30db01461005b578063fdfc8a5114610063575b600080fd5b34801561004557600080fd5b506100596100543660046107fa565b610083565b005b610059610452565b34801561006f57600080fd5b5061005961007e366004610849565b610478565b8260a001354211156100d45760405162461bcd60e51b8152602060048201526015602482015274151a19481d1a58dad95d081a5cc8195e1c1a5c9959605a1b60448201526064015b60405180910390fd5b6000836040516020016100e79190610929565b60405160208183030381529060405280519060200120905060008160405160200161013e91907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b604051602081830303815290604052805190602001209050600060018285604001602081019061016e9190610989565b604080516000815260208181018084529490945260ff909216908201528635606082015290860135608082015260a0016020604051602081039080840390855afa1580156101c0573d6000803e3d6000fd5b505060408051601f198101516020820189905293506000925001604051602081830303815290604052805190602001209050866080013581146102155760405162461bcd60e51b81526004016100cb906109b3565b60008061022860808a0160608b01610a08565b6001600160a01b03166001600160a01b03168152602001908152602001600020548760200135146102b15760405162461bcd60e51b815260206004820152602d60248201527f5469636b6574206e6f6e6365206d75737420626520746865206e65787420617660448201526c61696c61626c65206e6f6e636560981b60648201526084016100cb565b6102c16080880160608901610a08565b6001600160a01b0316826001600160a01b0316146103215760405162461bcd60e51b815260206004820152601e60248201527f5469636b6574206973206e6f74207369676e65642062792073656e646572000060448201526064016100cb565b86356001600061033760808b0160608c01610a08565b6001600160a01b03166001600160a01b031681526020019081526020016000205410156103765760405162461bcd60e51b81526004016100cb90610a25565b60008061038960808a0160608b01610a08565b6001600160a01b03168152602081019190915260400160009081208054916103b083610a7c565b909155506103c690506060880160408901610a08565b6040516001600160a01b039190911690883580156108fc02916000818181858888f193505050501580156103fe573d6000803e3d6000fd5b5086356001600061041560808b0160608c01610a08565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546104449190610a97565b909155505050505050505050565b3360009081526001602052604081208054349290610471908490610aae565b9091555050565b60005b838110156105ee5784848281811061049557610495610ac6565b905060c002016020013581600080336001600160a01b03166001600160a01b03168152602001908152602001600020546104cf9190610aae565b146105395760405162461bcd60e51b815260206004820152603460248201527f42617463686564207469636b657473206d7573742073746172742077697468206044820152736e65787420617661696c61626c65206e6f6e636560601b60648201526084016100cb565b84848281811061054b5761054b610ac6565b905060c0020160600160208101906105639190610a08565b6001600160a01b0316336001600160a01b0316146105dc5760405162461bcd60e51b815260206004820152603060248201527f42617463686564207469636b657473206d7573742062652072656465656d656460448201526f10313c903a3432b4b91039b2b73232b960811b60648201526084016100cb565b806105e681610a7c565b91505061047b565b50336000908152602081905260408120805485929061060e908490610aae565b90915550600090505b8381101561066a5761065885858381811061063457610634610ac6565b905060c0020184848481811061064c5761064c610ac6565b90506020020135610671565b8061066281610a7c565b915050610617565b5050505050565b8160a001354211156106bd5760405162461bcd60e51b8152602060048201526015602482015274151a19481d1a58dad95d081a5cc8195e1c1a5c9959605a1b60448201526064016100cb565b6000816040516020016106d291815260200190565b6040516020818303038152906040528051906020012090508260800135811461070d5760405162461bcd60e51b81526004016100cb906109b3565b8235600160006107236080870160608801610a08565b6001600160a01b03166001600160a01b031681526020019081526020016000205410156107625760405162461bcd60e51b81526004016100cb90610a25565b6107726060840160408501610a08565b6040516001600160a01b039190911690843580156108fc02916000818181858888f193505050501580156107aa573d6000803e3d6000fd5b508235600160006107c16080870160608801610a08565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546107f09190610a97565b9091555050505050565b600080600083850361014081121561081157600080fd5b60c081121561081f57600080fd5b84935060c08401359250606060df198201121561083b57600080fd5b5060e0840190509250925092565b6000806000806040858703121561085f57600080fd5b843567ffffffffffffffff8082111561087757600080fd5b818701915087601f83011261088b57600080fd5b81358181111561089a57600080fd5b88602060c0830285010111156108af57600080fd5b6020928301965094509086013590808211156108ca57600080fd5b818701915087601f8301126108de57600080fd5b8135818111156108ed57600080fd5b8860208260051b850101111561090257600080fd5b95989497505060200194505050565b6001600160a01b038116811461092657600080fd5b50565b813581526020808301359082015260c08101604083013561094981610911565b6001600160a01b03908116604084015260608401359061096882610911565b1660608301526080838101359083015260a092830135929091019190915290565b60006020828403121561099b57600080fd5b813560ff811681146109ac57600080fd5b9392505050565b60208082526035908201527f54686520707265696d616765206d757374206d617463682074686520657363726040820152741bddc81a185cda081bdb881d1a19481d1a58dad95d605a1b606082015260800190565b600060208284031215610a1a57600080fd5b81356109ac81610911565b60208082526021908201527f53656e64657220646f6573206e6f74206861766520656e6f7567682066756e646040820152607360f81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610a9057610a90610a66565b5060010190565b600082821015610aa957610aa9610a66565b500390565b60008219821115610ac157610ac1610a66565b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220af835b52255b41b3fc928c518d842702f62c257ee3c7421188644448fd5d1c3c64736f6c634300080a0033";

type L1ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1Contract__factory extends ContractFactory {
  constructor(...args: L1ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L1Contract> {
    return super.deploy(overrides || {}) as Promise<L1Contract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): L1Contract {
    return super.attach(address) as L1Contract;
  }
  connect(signer: Signer): L1Contract__factory {
    return super.connect(signer) as L1Contract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1ContractInterface {
    return new utils.Interface(_abi) as L1ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1Contract {
    return new Contract(address, _abi, signerOrProvider) as L1Contract;
  }
}
