/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { L1Contract, L1ContractInterface } from "../L1Contract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "ticket",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "escrowPreimage",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "claimTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket[]",
        name: "tickets",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[]",
        name: "escrowPreimages",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature[]",
        name: "signatures",
        type: "tuple[]",
      },
    ],
    name: "claimTickets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a47806100206000396000f3fe60806040526004361061004a5760003560e01c80631f0222881461004f578063760bd287146100715780639c6a84cd14610091578063d0679d34146100cd578063d0e30db0146100ed575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610668565b6100f5565b005b34801561007d57600080fd5b5061006f61008c366004610748565b61046f565b34801561009d57600080fd5b506100b16100ac36600461088a565b6104e6565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d957600080fd5b5061006f6100e83660046108cf565b6105a3565b61006f610642565b60008360405160200161010891906108fb565b604051602081830303815290604052805190602001209050600061013782848036038101906100ac919061095b565b905060008460405160200161014e91815260200190565b6040516020818303038152906040528051906020012090508560a001354211156101b75760405162461bcd60e51b8152602060048201526015602482015274151a19481d1a58dad95d081a5cc8195e1c1a5c9959605a1b60448201526064015b60405180910390fd5b856080013581146102285760405162461bcd60e51b815260206004820152603560248201527f54686520707265696d616765206d757374206d617463682074686520657363726044820152741bddc81a185cda081bdb881d1a19481d1a58dad95d605a1b60648201526084016101ae565b60008061023b6080890160608a0161097e565b6001600160a01b03166001600160a01b03168152602001908152602001600020548660200135146102c45760405162461bcd60e51b815260206004820152602d60248201527f5469636b6574206e6f6e6365206d75737420626520746865206e65787420617660448201526c61696c61626c65206e6f6e636560981b60648201526084016101ae565b6102d4608087016060880161097e565b6001600160a01b0316826001600160a01b0316146103345760405162461bcd60e51b815260206004820152601e60248201527f5469636b6574206973206e6f74207369676e65642062792073656e646572000060448201526064016101ae565b85356001600061034a60808a0160608b0161097e565b6001600160a01b03166001600160a01b031681526020019081526020016000205410156103c35760405162461bcd60e51b815260206004820152602160248201527f53656e64657220646f6573206e6f74206861766520656e6f7567682066756e646044820152607360f81b60648201526084016101ae565b6000806103d66080890160608a0161097e565b6001600160a01b03168152602081019190915260400160009081208054916103fd836109b1565b9091555061041d9050610416606088016040890161097e565b87356105a3565b85356001600061043360808a0160608b0161097e565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461046291906109cc565b9091555050505050505050565b60005b858110156104dd576104cb87878381811061048f5761048f6109e3565b905060c002018686848181106104a7576104a76109e3565b905060200201358585858181106104c0576104c06109e3565b9050606002016100f5565b806104d5816109b1565b915050610472565b50505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018390526000908190605c0160408051601f198184030181528282528051602091820120868301518751888401516000875293860180865283905260ff9091169385019390935260608401929092526080830152915060019060a0016020604051602081039080840390855afa158015610590573d6000803e3d6000fd5b5050604051601f19015195945050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146105f0576040519150601f19603f3d011682016040523d82523d6000602084013e6105f5565b606091505b505090508061063d5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101ae565b505050565b33600090815260016020526040812080543492906106619084906109f9565b9091555050565b600080600083850361014081121561067f57600080fd5b60c081121561068d57600080fd5b84935060c08401359250606060df19820112156106a957600080fd5b5060e0840190509250925092565b60008083601f8401126106c957600080fd5b50813567ffffffffffffffff8111156106e157600080fd5b6020830191508360208260051b85010111156106fc57600080fd5b9250929050565b60008083601f84011261071557600080fd5b50813567ffffffffffffffff81111561072d57600080fd5b6020830191508360206060830285010111156106fc57600080fd5b6000806000806000806060878903121561076157600080fd5b863567ffffffffffffffff8082111561077957600080fd5b818901915089601f83011261078d57600080fd5b81358181111561079c57600080fd5b8a602060c0830285010111156107b157600080fd5b6020928301985096509088013590808211156107cc57600080fd5b6107d88a838b016106b7565b909650945060408901359150808211156107f157600080fd5b506107fe89828a01610703565b979a9699509497509295939492505050565b60006060828403121561082257600080fd5b6040516060810181811067ffffffffffffffff8211171561085357634e487b7160e01b600052604160045260246000fd5b80604052508091508235815260208301356020820152604083013560ff8116811461087d57600080fd5b6040919091015292915050565b6000806080838503121561089d57600080fd5b823591506108ae8460208501610810565b90509250929050565b6001600160a01b03811681146108cc57600080fd5b50565b600080604083850312156108e257600080fd5b82356108ed816108b7565b946020939093013593505050565b813581526020808301359082015260c08101604083013561091b816108b7565b6001600160a01b03908116604084015260608401359061093a826108b7565b1660608301526080838101359083015260a092830135929091019190915290565b60006060828403121561096d57600080fd5b6109778383610810565b9392505050565b60006020828403121561099057600080fd5b8135610977816108b7565b634e487b7160e01b600052601160045260246000fd5b60006000198214156109c5576109c561099b565b5060010190565b6000828210156109de576109de61099b565b500390565b634e487b7160e01b600052603260045260246000fd5b60008219821115610a0c57610a0c61099b565b50019056fea26469706673582212200c4fb8cf3e3268154798fb3194e5f6f1174893efeeb1471d648639aec3316d2164736f6c634300080a0033";

type L1ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1Contract__factory extends ContractFactory {
  constructor(...args: L1ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L1Contract> {
    return super.deploy(overrides || {}) as Promise<L1Contract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): L1Contract {
    return super.attach(address) as L1Contract;
  }
  connect(signer: Signer): L1Contract__factory {
    return super.connect(signer) as L1Contract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1ContractInterface {
    return new utils.Interface(_abi) as L1ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1Contract {
    return new Contract(address, _abi, signerOrProvider) as L1Contract;
  }
}
