/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { L2Contract, L2ContractInterface } from "../L2Contract";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "escrowSecret",
        type: "bytes32[]",
      },
    ],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "ticket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "ticketSignature",
        type: "tuple",
      },
    ],
    name: "commitToWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "escrowHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimExpiry",
        type: "uint256",
      },
    ],
    name: "lockFundsInEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "commitedTicket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "firstSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "secondTicket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "secondSignature",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "escrowSecret",
        type: "bytes32",
      },
    ],
    name: "proveFraud",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "escrowSecret",
        type: "bytes32[]",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e9c806100206000396000f3fe6080604052600436106100555760003560e01c80631e5eb3741461005a5780636756c3f41461007c5780637be277051461009c5780639c6a84cd146100bc578063aac88323146100f8578063ed822eac1461010b575b600080fd5b34801561006657600080fd5b5061007a610075366004610b13565b61012b565b005b34801561008857600080fd5b5061007a610097366004610b7f565b6102e0565b3480156100a857600080fd5b5061007a6100b7366004610bcd565b6103f9565b3480156100c857600080fd5b506100dc6100d7366004610c9c565b61053f565b6040516001600160a01b03909116815260200160405180910390f35b61007a610106366004610cc0565b6105fc565b34801561011757600080fd5b5061007a610126366004610cfb565b610738565b3360009081526020818152604091829020825160c08101845281546001600160a01b039081168252600183015416928101929092526002810154928201929092526003820154606082015260048201546080820181905260059092015460a0820152904211156101ee5760405162461bcd60e51b8152602060048201526024808201527f54686520657363726f7720636c61696d20706572696f642068617320657870696044820152633932b21760e11b60648201526084015b60405180910390fd5b80606001514210156102525760405162461bcd60e51b815260206004820152602760248201527f54686520657363726f7720636c61696d20706572696f6420686173206e6f74206044820152661cdd185c9d195960ca1b60648201526084016101e5565b8282604051602001610265929190610d5f565b604051602081830303815290604052805190602001208160a001511461029d5760405162461bcd60e51b81526004016101e590610d9b565b805160408083015190516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156102da573d6000803e3d6000fd5b50505050565b6000826040516020016102f39190610dc6565b604051602081830303815290604052805190602001209050600061032282848036038101906100d79190610e26565b90506001600160a01b03811661033e6080860160608701610e49565b6001600160a01b0316146103a55760405162461bcd60e51b815260206004820152602860248201527f546865207469636b6574206d757374206265207369676e6564206279207468656044820152671039b2b73232b91760c11b60648201526084016101e5565b81600160006103ba6080880160608901610e49565b6001600160a01b03166001600160a01b031681526020019081526020016000206000866020013581526020019081526020016000208190555050505050565b6001600160a01b0380841660009081526020818152604091829020825160c0810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830181905260059091015460a083015242116104ac5760405162461bcd60e51b815260206004820152601e60248201527f46756e647320617265206e6f74207265636c61696d61626c65207965742e000060448201526064016101e5565b82826040516020016104bf929190610d5f565b604051602081830303815290604052805190602001208160a00151146104f75760405162461bcd60e51b81526004016101e590610d9b565b80602001516001600160a01b03166108fc82604001519081150290604051600060405180830381858888f19350505050158015610538573d6000803e3d6000fd5b5050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018390526000908190605c0160408051601f198184030181528282528051602091820120868301518751888401516000875293860180865283905260ff9091169385019390935260608401929092526080830152915060019060a0016020604051602081039080840390855afa1580156105e9573d6000803e3d6000fd5b5050604051601f19015195945050505050565b6001600160a01b0380851660009081526020818152604091829020825160c081018452815485168152600182015490941691840191909152600281015491830182905260038101546060840152600481015460808401526005015460a0830152156106a95760405162461bcd60e51b815260206004820152601e60248201527f46756e647320616c7265616479206c6f636b656420696e20657363726f77000060448201526064016101e5565b506040805160c0810182526001600160a01b0395861680825233602080840191825234848601908152606085019788526080850196875260a0850198895260009384529083905293909120915182549088166001600160a01b03199182161783559051600183018054919098169116179095555160028501559051600384015551600483015551600590910155565b60008560405160200161074b9190610dc6565b604051602081830303815290604052805190602001209050600061077a82878036038101906100d79190610e26565b905060008560405160200161078f9190610dc6565b60405160208183030381529060405280519060200120905060006107be82878036038101906100d79190610e26565b9050818414156108105760405162461bcd60e51b815260206004820152601860248201527f5469636b657473206d7573742062652064697374696e6374000000000000000060448201526064016101e5565b806001600160a01b0316836001600160a01b03161461088c5760405162461bcd60e51b815260206004820152603260248201527f5468652074776f207469636b657473206d757374206265207369676e656420626044820152713c903a34329039b0b6b29039b4b3b732b91760711b60648201526084016101e5565b83600160006108a160808d0160608e01610e49565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008b60200135815260200190815260200160002054146109245760405162461bcd60e51b815260206004820152601e60248201527f546865207469636b6574206d75737420626520636f6d6d6974656420746f000060448201526064016101e5565b866020013589602001351461098d5760405162461bcd60e51b815260206004820152602960248201527f5468652074776f207469636b657473206d75737420686176652074686520736160448201526836b2903737b731b29760b91b60648201526084016101e5565b3360009081526020818152604091829020825160c08101845281546001600160a01b03908116825260018301541681840152600282015481850152600382015460608201526004820154608082015260059091015460a082015282519182018890529101604051602081830303815290604052805190602001208160a0015114610a295760405162461bcd60e51b81526004016101e590610d9b565b8960a00135421115610a7d5760405162461bcd60e51b815260206004820152601760248201527f546865207469636b65742068617320657870697265642e00000000000000000060448201526064016101e5565b805160408083015190516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610aba573d6000803e3d6000fd5b5050505050505050505050565b60008083601f840112610ad957600080fd5b50813567ffffffffffffffff811115610af157600080fd5b6020830191508360208260051b8501011115610b0c57600080fd5b9250929050565b60008060208385031215610b2657600080fd5b823567ffffffffffffffff811115610b3d57600080fd5b610b4985828601610ac7565b90969095509350505050565b600060c08284031215610b6757600080fd5b50919050565b600060608284031215610b6757600080fd5b6000806101208385031215610b9357600080fd5b610b9d8484610b55565b9150610bac8460c08501610b6d565b90509250929050565b6001600160a01b0381168114610bca57600080fd5b50565b600080600060408486031215610be257600080fd5b8335610bed81610bb5565b9250602084013567ffffffffffffffff811115610c0957600080fd5b610c1586828701610ac7565b9497909650939450505050565b600060608284031215610c3457600080fd5b6040516060810181811067ffffffffffffffff82111715610c6557634e487b7160e01b600052604160045260246000fd5b80604052508091508235815260208301356020820152604083013560ff81168114610c8f57600080fd5b6040919091015292915050565b60008060808385031215610caf57600080fd5b82359150610bac8460208501610c22565b60008060008060808587031215610cd657600080fd5b8435610ce181610bb5565b966020860135965060408601359560600135945092505050565b60008060008060006102608688031215610d1457600080fd5b610d1e8787610b55565b9450610d2d8760c08801610b6d565b9350610d3d876101208801610b55565b9250610d4d876101e08801610b6d565b94979396509194610240013592915050565b6020808252810182905260006001600160fb1b03831115610d7f57600080fd5b8260051b80856040850137600092016040019182525092915050565b60208082526011908201527024b73b30b634b210383932b4b6b0b3b29760791b604082015260600190565b813581526020808301359082015260c081016040830135610de681610bb5565b6001600160a01b039081166040840152606084013590610e0582610bb5565b1660608301526080838101359083015260a092830135929091019190915290565b600060608284031215610e3857600080fd5b610e428383610c22565b9392505050565b600060208284031215610e5b57600080fd5b8135610e4281610bb556fea2646970667358221220b9c3d885b72c661d59c45ec7146999217ba18660fb6a8a412f9bca0eda16036164736f6c634300080a0033";

type L2ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2Contract__factory extends ContractFactory {
  constructor(...args: L2ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L2Contract> {
    return super.deploy(overrides || {}) as Promise<L2Contract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): L2Contract {
    return super.attach(address) as L2Contract;
  }
  connect(signer: Signer): L2Contract__factory {
    return super.connect(signer) as L2Contract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2ContractInterface {
    return new utils.Interface(_abi) as L2ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2Contract {
    return new Contract(address, _abi, signerOrProvider) as L2Contract;
  }
}
