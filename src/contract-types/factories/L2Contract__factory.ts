/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { L2Contract, L2ContractInterface } from "../L2Contract";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowSecret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimExpiry",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
        ],
        internalType: "struct EscrowEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "ticket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "ticketSignature",
        type: "tuple",
      },
    ],
    name: "commitToWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimExpiry",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
        ],
        internalType: "struct EscrowEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "lockFundsInEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "commitedTicket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "firstSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "secondTicket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "secondSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimExpiry",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
        ],
        internalType: "struct EscrowEntry",
        name: "entry",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "escrowSecret",
        type: "bytes32",
      },
    ],
    name: "proveFraud",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimExpiry",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
        ],
        internalType: "struct EscrowEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610fa1806100206000396000f3fe6080604052600436106100555760003560e01c80631702b18b1461005a57806325708bec1461007c578063614ed87c1461009c5780636756c3f4146100bc5780637d4d5a74146100dc5780639c6a84cd146100ef575b600080fd5b34801561006657600080fd5b5061007a610075366004610cc5565b61012b565b005b34801561008857600080fd5b5061007a610097366004610d3c565b610539565b3480156100a857600080fd5b5061007a6100b7366004610d69565b6107ae565b3480156100c857600080fd5b5061007a6100d7366004610d8c565b610950565b61007a6100ea366004610d69565b610a69565b3480156100fb57600080fd5b5061010f61010a366004610e33565b610bde565b6040516001600160a01b03909116815260200160405180910390f35b60008660405160200161013e9190610e6f565b604051602081830303815290604052805190602001209050600061016d828880360381019061010a9190610ecf565b90506000866040516020016101829190610e6f565b60405160208183030381529060405280519060200120905060006101b1828880360381019061010a9190610ecf565b90506000856040516020016101c891815260200190565b6040516020818303038152906040528051906020012090506000876040516020016101f39190610eeb565b604051602081830303815290604052805190602001209050838614156102605760405162461bcd60e51b815260206004820152601860248201527f5469636b657473206d7573742062652064697374696e6374000000000000000060448201526064015b60405180910390fd5b826001600160a01b0316856001600160a01b0316146102dc5760405162461bcd60e51b815260206004820152603260248201527f5468652074776f207469636b657473206d757374206265207369676e656420626044820152713c903a34329039b0b6b29039b4b3b732b91760711b6064820152608401610257565b85600160008e60600160208101906102f49190610f4e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008e60200135815260200190815260200160002054146103775760405162461bcd60e51b815260206004820152601e60248201527f546865207469636b6574206d75737420626520636f6d6d6974656420746f00006044820152606401610257565b89602001358c60200135146103e05760405162461bcd60e51b815260206004820152602960248201527f5468652074776f207469636b657473206d75737420686176652074686520736160448201526836b2903737b731b29760b91b6064820152608401610257565b6000808d60600160208101906103f69190610f4e565b6001600160a01b03166001600160a01b03168152602001908152602001600020600083815260200190815260200160002054811461048d5760405162461bcd60e51b815260206004820152602e60248201527f54686520657363726f7720656e74727920646f6573206e6f74206d617463682060448201526d0e8d0ca40cadce8e4f240d0c2e6d60931b6064820152608401610257565b8b60a001354211156104e15760405162461bcd60e51b815260206004820152601760248201527f546865207469636b65742068617320657870697265642e0000000000000000006044820152606401610257565b6104ee6020890189610f4e565b6001600160a01b03166108fc89604001359081150290604051600060405180830381858888f1935050505015801561052a573d6000803e3d6000fd5b50505050505050505050505050565b60008160405160200161054c9190610eeb565b6040516020818303038152906040528051906020012090508060008084600001602081019061057b9190610f4e565b6001600160a01b03166001600160a01b03168152602001908152602001600020600083815260200190815260200160002054146105fa5760405162461bcd60e51b815260206004820152601b60248201527f546865726520617265206e6f2066756e647320746f20636c61696d00000000006044820152606401610257565b816080013542111561065a5760405162461bcd60e51b8152602060048201526024808201527f54686520657363726f7720636c61696d20706572696f642068617320657870696044820152633932b21760e11b6064820152608401610257565b81606001354210156106be5760405162461bcd60e51b815260206004820152602760248201527f54686520657363726f7720636c61696d20706572696f6420686173206e6f74206044820152661cdd185c9d195960ca1b6064820152608401610257565b604080516020810185905201604051602081830303815290604052805190602001208260a00135146107265760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b210383932b4b6b0b3b29760791b6044820152606401610257565b6107336020830183610f4e565b6001600160a01b03166108fc83604001359081150290604051600060405180830381858888f1935050505015801561076f573d6000803e3d6000fd5b50600080806107816020860186610f4e565b6001600160a01b031681526020808201929092526040908101600090812094815293909152909120555050565b6000816040516020016107c19190610eeb565b604051602081830303815290604052805190602001209050806000808460000160208101906107f09190610f4e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008460a00135815260200190815260200160002054146108735760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420657363726f7720656e7472792068617368000000000000006044820152606401610257565b816080013542116108c65760405162461bcd60e51b815260206004820152601e60248201527f46756e647320617265206e6f74207265636c61696d61626c65207965742e00006044820152606401610257565b6108d66040830160208401610f4e565b6001600160a01b03166108fc83604001359081150290604051600060405180830381858888f19350505050158015610912573d6000803e3d6000fd5b50600080806109246020860186610f4e565b6001600160a01b0316815260208082019290925260409081016000908120948152939091529091205550565b6000826040516020016109639190610e6f565b6040516020818303038152906040528051906020012090506000610992828480360381019061010a9190610ecf565b90506001600160a01b0381166109ae6080860160608701610f4e565b6001600160a01b031614610a155760405162461bcd60e51b815260206004820152602860248201527f546865207469636b6574206d757374206265207369676e6564206279207468656044820152671039b2b73232b91760c11b6064820152608401610257565b8160016000610a2a6080880160608901610f4e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000866020013581526020019081526020016000208190555050505050565b600081604051602001610a7c9190610eeb565b6040516020818303038152906040528051906020012090506000806000846000016020810190610aac9190610f4e565b6001600160a01b031681526020808201929092526040908101600090812060a0870135825290925290205490508015610b405760405162461bcd60e51b815260206004820152603060248201527f546865726520697320616c726561647920616e20657363726f7720656e74727960448201526f103337b91032b9b1b937bba430b9b41760811b6064820152608401610257565b82604001353414610b935760405162461bcd60e51b815260206004820152601960248201527f496e636f727265637420616d6f756e74206f662066756e6473000000000000006044820152606401610257565b81600080610ba46020870187610f4e565b6001600160a01b03166001600160a01b03168152602001908152602001600020600084815260200190815260200160002081905550505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018390526000908190605c0160408051601f198184030181528282528051602091820120868301518751888401516000875293860180865283905260ff9091169385019390935260608401929092526080830152915060019060a0016020604051602081039080840390855afa158015610c88573d6000803e3d6000fd5b5050604051601f19015195945050505050565b600060c08284031215610cad57600080fd5b50919050565b600060608284031215610cad57600080fd5b6000806000806000806103208789031215610cdf57600080fd5b610ce98888610c9b565b9550610cf88860c08901610cb3565b9450610d08886101208901610c9b565b9350610d18886101e08901610cb3565b9250610d28886102408901610c9b565b915061030087013590509295509295509295565b60008060e08385031215610d4f57600080fd5b82359150610d608460208501610c9b565b90509250929050565b600060c08284031215610d7b57600080fd5b610d858383610c9b565b9392505050565b6000806101208385031215610da057600080fd5b610daa8484610c9b565b9150610d608460c08501610cb3565b600060608284031215610dcb57600080fd5b6040516060810181811067ffffffffffffffff82111715610dfc57634e487b7160e01b600052604160045260246000fd5b80604052508091508235815260208301356020820152604083013560ff81168114610e2657600080fd5b6040919091015292915050565b60008060808385031215610e4657600080fd5b82359150610d608460208501610db9565b6001600160a01b0381168114610e6c57600080fd5b50565b813581526020808301359082015260c081016040830135610e8f81610e57565b6001600160a01b039081166040840152606084013590610eae82610e57565b1660608301526080838101359083015260a092830135929091019190915290565b600060608284031215610ee157600080fd5b610d858383610db9565b60c081018235610efa81610e57565b6001600160a01b039081168352602084013590610f1682610e57565b8082166020850152505060408301356040830152606083013560608301526080830135608083015260a083013560a083015292915050565b600060208284031215610f6057600080fd5b8135610d8581610e5756fea264697066735822122081eb0a06cf09fa3bdd2ee82a7854ae821641b1181ca1ce25e6d2960877ab507864736f6c634300080a0033";

type L2ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2Contract__factory extends ContractFactory {
  constructor(...args: L2ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L2Contract> {
    return super.deploy(overrides || {}) as Promise<L2Contract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): L2Contract {
    return super.attach(address) as L2Contract;
  }
  connect(signer: Signer): L2Contract__factory {
    return super.connect(signer) as L2Contract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2ContractInterface {
    return new utils.Interface(_abi) as L2ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2Contract {
    return new Contract(address, _abi, signerOrProvider) as L2Contract;
  }
}
