/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { L2Contract, L2ContractInterface } from "../L2Contract";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "escrowSecret",
        type: "bytes32[]",
      },
    ],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "ticket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "ticketSignature",
        type: "tuple",
      },
    ],
    name: "commitToWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "escrowHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "claimStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimExpiry",
        type: "uint256",
      },
    ],
    name: "lockFundsInEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "commitedTicket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "firstSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "secondTicket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "secondSignature",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "escrowSecret",
        type: "bytes32",
      },
    ],
    name: "proveFraud",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dfe806100206000396000f3fe6080604052600436106100555760003560e01c80631e5eb3741461005a5780636756c3f41461007c5780639c6a84cd1461009c578063aac88323146100d8578063ed822eac146100eb578063fa89401a1461010b575b600080fd5b34801561006657600080fd5b5061007a610075366004610ac2565b61012b565b005b34801561008857600080fd5b5061007a610097366004610b61565b610304565b3480156100a857600080fd5b506100bc6100b7366004610c11565b61041d565b6040516001600160a01b03909116815260200160405180910390f35b61007a6100e6366004610c4d565b6104da565b3480156100f757600080fd5b5061007a610106366004610c88565b610616565b34801561011757600080fd5b5061007a610126366004610cec565b6109c9565b3360009081526020818152604091829020825160c08101845281546001600160a01b039081168252600183015416928101929092526002810154928201929092526003820154606082015260048201546080820181905260059092015460a0820152904211156101ee5760405162461bcd60e51b8152602060048201526024808201527f54686520657363726f7720636c61696d20706572696f642068617320657870696044820152633932b21760e11b60648201526084015b60405180910390fd5b80606001514210156102525760405162461bcd60e51b815260206004820152602760248201527f54686520657363726f7720636c61696d20706572696f6420686173206e6f74206044820152661cdd185c9d195960ca1b60648201526084016101e5565b8282604051602001610265929190610d10565b604051602081830303815290604052805190602001208160a00151146102c15760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b210383932b4b6b0b3b29760791b60448201526064016101e5565b805160408083015190516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156102fe573d6000803e3d6000fd5b50505050565b6000826040516020016103179190610d4c565b604051602081830303815290604052805190602001209050600061034682848036038101906100b79190610dac565b90506001600160a01b0381166103626080860160608701610cec565b6001600160a01b0316146103c95760405162461bcd60e51b815260206004820152602860248201527f546865207469636b6574206d757374206265207369676e6564206279207468656044820152671039b2b73232b91760c11b60648201526084016101e5565b81600160006103de6080880160608901610cec565b6001600160a01b03166001600160a01b031681526020019081526020016000206000866020013581526020019081526020016000208190555050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018390526000908190605c0160408051601f198184030181528282528051602091820120868301518751888401516000875293860180865283905260ff9091169385019390935260608401929092526080830152915060019060a0016020604051602081039080840390855afa1580156104c7573d6000803e3d6000fd5b5050604051601f19015195945050505050565b6001600160a01b0380851660009081526020818152604091829020825160c081018452815485168152600182015490941691840191909152600281015491830182905260038101546060840152600481015460808401526005015460a0830152156105875760405162461bcd60e51b815260206004820152601e60248201527f46756e647320616c7265616479206c6f636b656420696e20657363726f77000060448201526064016101e5565b506040805160c0810182526001600160a01b0395861680825233602080840191825234848601908152606085019788526080850196875260a0850198895260009384529083905293909120915182549088166001600160a01b03199182161783559051600183018054919098169116179095555160028501559051600384015551600483015551600590910155565b6000856040516020016106299190610d4c565b604051602081830303815290604052805190602001209050600061065882878036038101906100b79190610dac565b905060008560405160200161066d9190610d4c565b604051602081830303815290604052805190602001209050600061069c82878036038101906100b79190610dac565b9050818414156106ee5760405162461bcd60e51b815260206004820152601860248201527f5469636b657473206d7573742062652064697374696e6374000000000000000060448201526064016101e5565b806001600160a01b0316836001600160a01b03161461076a5760405162461bcd60e51b815260206004820152603260248201527f5468652074776f207469636b657473206d757374206265207369676e656420626044820152713c903a34329039b0b6b29039b4b3b732b91760711b60648201526084016101e5565b836001600061077f60808d0160608e01610cec565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008b60200135815260200190815260200160002054146108025760405162461bcd60e51b815260206004820152601e60248201527f546865207469636b6574206d75737420626520636f6d6d6974656420746f000060448201526064016101e5565b866020013589602001351461086b5760405162461bcd60e51b815260206004820152602960248201527f5468652074776f207469636b657473206d75737420686176652074686520736160448201526836b2903737b731b29760b91b60648201526084016101e5565b3360009081526020818152604091829020825160c08101845281546001600160a01b03908116825260018301541681840152600282015481850152600382015460608201526004820154608082015260059091015460a082015282519182018890529101604051602081830303815290604052805190602001208160a001511461092b5760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b210383932b4b6b0b3b29760791b60448201526064016101e5565b8960a0013542111561097f5760405162461bcd60e51b815260206004820152601760248201527f546865207469636b65742068617320657870697265642e00000000000000000060448201526064016101e5565b805160408083015190516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156109bc573d6000803e3d6000fd5b5050505050505050505050565b6001600160a01b0380821660009081526020818152604091829020825160c0810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830181905260059091015460a08301524211610a7c5760405162461bcd60e51b815260206004820152601e60248201527f46756e647320617265206e6f74207265636c61696d61626c65207965742e000060448201526064016101e5565b80602001516001600160a01b03166108fc82604001519081150290604051600060405180830381858888f19350505050158015610abd573d6000803e3d6000fd5b505050565b60008060208385031215610ad557600080fd5b823567ffffffffffffffff80821115610aed57600080fd5b818501915085601f830112610b0157600080fd5b813581811115610b1057600080fd5b8660208260051b8501011115610b2557600080fd5b60209290920196919550909350505050565b600060c08284031215610b4957600080fd5b50919050565b600060608284031215610b4957600080fd5b6000806101208385031215610b7557600080fd5b610b7f8484610b37565b9150610b8e8460c08501610b4f565b90509250929050565b600060608284031215610ba957600080fd5b6040516060810181811067ffffffffffffffff82111715610bda57634e487b7160e01b600052604160045260246000fd5b80604052508091508235815260208301356020820152604083013560ff81168114610c0457600080fd5b6040919091015292915050565b60008060808385031215610c2457600080fd5b82359150610b8e8460208501610b97565b6001600160a01b0381168114610c4a57600080fd5b50565b60008060008060808587031215610c6357600080fd5b8435610c6e81610c35565b966020860135965060408601359560600135945092505050565b60008060008060006102608688031215610ca157600080fd5b610cab8787610b37565b9450610cba8760c08801610b4f565b9350610cca876101208801610b37565b9250610cda876101e08801610b4f565b94979396509194610240013592915050565b600060208284031215610cfe57600080fd5b8135610d0981610c35565b9392505050565b6020808252810182905260006001600160fb1b03831115610d3057600080fd5b8260051b80856040850137600092016040019182525092915050565b813581526020808301359082015260c081016040830135610d6c81610c35565b6001600160a01b039081166040840152606084013590610d8b82610c35565b1660608301526080838101359083015260a092830135929091019190915290565b600060608284031215610dbe57600080fd5b610d098383610b9756fea26469706673582212203a8f5161c74284e5521264d318a41a8cb779b6bd8c321c583884da86156e71e464736f6c634300080a0033";

type L2ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2Contract__factory extends ContractFactory {
  constructor(...args: L2ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L2Contract> {
    return super.deploy(overrides || {}) as Promise<L2Contract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): L2Contract {
    return super.attach(address) as L2Contract;
  }
  connect(signer: Signer): L2Contract__factory {
    return super.connect(signer) as L2Contract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2ContractInterface {
    return new utils.Interface(_abi) as L2ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2Contract {
    return new Contract(address, _abi, signerOrProvider) as L2Contract;
  }
}
