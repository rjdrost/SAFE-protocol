/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { L2Contract, L2ContractInterface } from "../L2Contract";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "escrowSecret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimExpiry",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
        ],
        internalType: "struct EscrowEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "ticket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "ticketSignature",
        type: "tuple",
      },
    ],
    name: "commitToWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimExpiry",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
        ],
        internalType: "struct EscrowEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "lockFundsInEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "commitedTicket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "firstSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "senderNonce",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalTicket",
        name: "secondTicket",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "secondSignature",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimExpiry",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
        ],
        internalType: "struct EscrowEntry",
        name: "entry",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "escrowSecret",
        type: "bytes32",
      },
    ],
    name: "proveFraud",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimExpiry",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "escrowHash",
            type: "bytes32",
          },
        ],
        internalType: "struct EscrowEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061104b806100206000396000f3fe6080604052600436106100705760003560e01c80636756c3f41161004e5780636756c3f4146100d75780637d4d5a74146100f75780639c6a84cd1461010a578063d0679d341461014657600080fd5b80631702b18b1461007557806325708bec14610097578063614ed87c146100b7575b600080fd5b34801561008157600080fd5b50610095610090366004610d43565b610166565b005b3480156100a357600080fd5b506100956100b2366004610dba565b610547565b3480156100c357600080fd5b506100956100d2366004610de7565b610786565b3480156100e357600080fd5b506100956100f2366004610e0a565b610928565b610095610105366004610de7565b610a41565b34801561011657600080fd5b5061012a610125366004610eb1565b610bba565b6040516001600160a01b03909116815260200160405180910390f35b34801561015257600080fd5b50610095610161366004610eed565b610c77565b6000866040516020016101799190610f19565b60405160208183030381529060405280519060200120905060006101a882888036038101906101259190610f79565b90506000866040516020016101bd9190610f19565b60405160208183030381529060405280519060200120905060006101ec82888036038101906101259190610f79565b905060008560405160200161020391815260200190565b60405160208183030381529060405280519060200120905060008760405160200161022e9190610f95565b6040516020818303038152906040528051906020012090508386141561029b5760405162461bcd60e51b815260206004820152601860248201527f5469636b657473206d7573742062652064697374696e6374000000000000000060448201526064015b60405180910390fd5b826001600160a01b0316856001600160a01b0316146103175760405162461bcd60e51b815260206004820152603260248201527f5468652074776f207469636b657473206d757374206265207369676e656420626044820152713c903a34329039b0b6b29039b4b3b732b91760711b6064820152608401610292565b85600160008e606001602081019061032f9190610ff8565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008e60200135815260200190815260200160002054146103b25760405162461bcd60e51b815260206004820152601e60248201527f546865207469636b6574206d75737420626520636f6d6d6974656420746f00006044820152606401610292565b89602001358c602001351461041b5760405162461bcd60e51b815260206004820152602960248201527f5468652074776f207469636b657473206d75737420686176652074686520736160448201526836b2903737b731b29760b91b6064820152608401610292565b6000808d60600160208101906104319190610ff8565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008381526020019081526020016000205481146104c85760405162461bcd60e51b815260206004820152602e60248201527f54686520657363726f7720656e74727920646f6573206e6f74206d617463682060448201526d0e8d0ca40cadce8e4f240d0c2e6d60931b6064820152608401610292565b8b60a0013542111561051c5760405162461bcd60e51b815260206004820152601760248201527f546865207469636b65742068617320657870697265642e0000000000000000006044820152606401610292565b61053961052f60408a0160208b01610ff8565b8960400135610c77565b505050505050505050505050565b6000806105576020840184610ff8565b6001600160a01b031681526020808201929092526040908101600090812060a085013582529092529020546105ce5760405162461bcd60e51b815260206004820152601b60248201527f546865726520617265206e6f2066756e647320746f20636c61696d00000000006044820152606401610292565b806080013542111561062e5760405162461bcd60e51b8152602060048201526024808201527f54686520657363726f7720636c61696d20706572696f642068617320657870696044820152633932b21760e11b6064820152608401610292565b80606001354210156106925760405162461bcd60e51b815260206004820152602760248201527f54686520657363726f7720636c61696d20706572696f6420686173206e6f74206044820152661cdd185c9d195960ca1b6064820152608401610292565b604080516020810184905201604051602081830303815290604052805190602001208160a00135146106fa5760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b210383932b4b6b0b3b29760791b6044820152606401610292565b6107076020820182610ff8565b6001600160a01b03166108fc82604001359081150290604051600060405180830381858888f19350505050158015610743573d6000803e3d6000fd5b50600080806107556020850185610ff8565b6001600160a01b031681526020808201929092526040908101600090812060a0909501358152939091529091205550565b6000816040516020016107999190610f95565b604051602081830303815290604052805190602001209050806000808460000160208101906107c89190610ff8565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008460a001358152602001908152602001600020541461084b5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420657363726f7720656e7472792068617368000000000000006044820152606401610292565b8160800135421161089e5760405162461bcd60e51b815260206004820152601e60248201527f46756e647320617265206e6f74207265636c61696d61626c65207965742e00006044820152606401610292565b6108ae6040830160208401610ff8565b6001600160a01b03166108fc83604001359081150290604051600060405180830381858888f193505050501580156108ea573d6000803e3d6000fd5b50600080806108fc6020860186610ff8565b6001600160a01b0316815260208082019290925260409081016000908120948152939091529091205550565b60008260405160200161093b9190610f19565b604051602081830303815290604052805190602001209050600061096a82848036038101906101259190610f79565b90506001600160a01b0381166109866080860160608701610ff8565b6001600160a01b0316146109ed5760405162461bcd60e51b815260206004820152602860248201527f546865207469636b6574206d757374206265207369676e6564206279207468656044820152671039b2b73232b91760c11b6064820152608401610292565b8160016000610a026080880160608901610ff8565b6001600160a01b03166001600160a01b031681526020019081526020016000206000866020013581526020019081526020016000208190555050505050565b600081604051602001610a549190610f95565b6040516020818303038152906040528051906020012090506000806000846000016020810190610a849190610ff8565b6001600160a01b031681526020808201929092526040908101600090812060a0870135825290925290205490508015610b185760405162461bcd60e51b815260206004820152603060248201527f546865726520697320616c726561647920616e20657363726f7720656e74727960448201526f103337b91032b9b1b937bba430b9b41760811b6064820152608401610292565b82604001353414610b6b5760405162461bcd60e51b815260206004820152601960248201527f496e636f727265637420616d6f756e74206f662066756e6473000000000000006044820152606401610292565b81600080610b7c6020870187610ff8565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560a00135815260200190815260200160002081905550505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018390526000908190605c0160408051601f198184030181528282528051602091820120868301518751888401516000875293860180865283905260ff9091169385019390935260608401929092526080830152915060019060a0016020604051602081039080840390855afa158015610c64573d6000803e3d6000fd5b5050604051601f19015195945050505050565b600080836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610cc5576040519150601f19603f3d011682016040523d82523d6000602084013e610cca565b606091505b509150915081610d135760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610292565b50505050565b600060c08284031215610d2b57600080fd5b50919050565b600060608284031215610d2b57600080fd5b6000806000806000806103208789031215610d5d57600080fd5b610d678888610d19565b9550610d768860c08901610d31565b9450610d86886101208901610d19565b9350610d96886101e08901610d31565b9250610da6886102408901610d19565b915061030087013590509295509295509295565b60008060e08385031215610dcd57600080fd5b82359150610dde8460208501610d19565b90509250929050565b600060c08284031215610df957600080fd5b610e038383610d19565b9392505050565b6000806101208385031215610e1e57600080fd5b610e288484610d19565b9150610dde8460c08501610d31565b600060608284031215610e4957600080fd5b6040516060810181811067ffffffffffffffff82111715610e7a57634e487b7160e01b600052604160045260246000fd5b80604052508091508235815260208301356020820152604083013560ff81168114610ea457600080fd5b6040919091015292915050565b60008060808385031215610ec457600080fd5b82359150610dde8460208501610e37565b6001600160a01b0381168114610eea57600080fd5b50565b60008060408385031215610f0057600080fd5b8235610f0b81610ed5565b946020939093013593505050565b813581526020808301359082015260c081016040830135610f3981610ed5565b6001600160a01b039081166040840152606084013590610f5882610ed5565b1660608301526080838101359083015260a092830135929091019190915290565b600060608284031215610f8b57600080fd5b610e038383610e37565b60c081018235610fa481610ed5565b6001600160a01b039081168352602084013590610fc082610ed5565b8082166020850152505060408301356040830152606083013560608301526080830135608083015260a083013560a083015292915050565b60006020828403121561100a57600080fd5b8135610e0381610ed556fea26469706673582212205b54537ac8feb95b02af3290d92d6226c539a6422e26769989343a2ef82fed0c64736f6c634300080a0033";

type L2ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2Contract__factory extends ContractFactory {
  constructor(...args: L2ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L2Contract> {
    return super.deploy(overrides || {}) as Promise<L2Contract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): L2Contract {
    return super.attach(address) as L2Contract;
  }
  connect(signer: Signer): L2Contract__factory {
    return super.connect(signer) as L2Contract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2ContractInterface {
    return new utils.Interface(_abi) as L2ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2Contract {
    return new Contract(address, _abi, signerOrProvider) as L2Contract;
  }
}
